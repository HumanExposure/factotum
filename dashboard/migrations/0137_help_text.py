# Generated by Django 2.2.1 on 2019-11-04 16:45

import dashboard.models.data_document
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [("dashboard", "0136_null_blank_unit_type")]

    operations = [
        migrations.AlterField(
            model_name="datadocument",
            name="data_group",
            field=models.ForeignKey(
                help_text="the DataGroup object to which the document belongs. The type of the data group determines which document types the document might be among, and determines much of the available relationships and behavior associated with the document's extracted data",
                on_delete=django.db.models.deletion.CASCADE,
                to="dashboard.DataGroup",
                verbose_name="data group",
            ),
        ),
        migrations.AlterField(
            model_name="datadocument",
            name="document_type",
            field=models.ForeignKey(
                default=dashboard.models.data_document.get_default_document_type,
                help_text="each type of data group may only contain certain types of data documents. The clean() method checks to make sure that the assigned document type is among the types allowed by the group type",
                on_delete=models.SET(
                    dashboard.models.data_document.get_default_document_type
                ),
                to="dashboard.DocumentType",
                verbose_name="document type",
            ),
        ),
        migrations.AlterField(
            model_name="datadocument",
            name="filename",
            field=models.CharField(
                help_text="The name of the document's source file",
                max_length=255,
                verbose_name="file name",
            ),
        ),
        migrations.AlterField(
            model_name="datadocument",
            name="matched",
            field=models.BooleanField(
                default=False,
                help_text="When a source file for the document has been uploaded to the file system, the document is considered matched to that source file. ",
            ),
        ),
        migrations.AlterField(
            model_name="datadocument",
            name="note",
            field=models.TextField(
                blank=True,
                help_text="Long-form notes about the document",
                null=True,
                verbose_name="note",
            ),
        ),
        migrations.AlterField(
            model_name="datadocument",
            name="organization",
            field=models.CharField(
                blank=True,
                help_text="The organization that provided the source file",
                max_length=255,
                verbose_name="organization",
            ),
        ),
        migrations.AlterField(
            model_name="datadocument",
            name="products",
            field=models.ManyToManyField(
                help_text="Products are associated with the data document in a many-to-many relationship",
                through="dashboard.ProductDocument",
                to="dashboard.Product",
            ),
        ),
        migrations.AlterField(
            model_name="datadocument",
            name="raw_category",
            field=models.CharField(
                blank=True,
                help_text="the category applied by the document's originating dataset",
                max_length=1000,
                null=True,
                verbose_name="raw category",
            ),
        ),
        migrations.AlterField(
            model_name="datadocument",
            name="subtitle",
            field=models.CharField(
                blank=True,
                default=None,
                help_text="the subtitle of the document",
                max_length=250,
                null=True,
                verbose_name="subtitle",
            ),
        ),
        migrations.AlterField(
            model_name="datadocument",
            name="title",
            field=models.CharField(
                help_text="the title of the document",
                max_length=255,
                verbose_name="title",
            ),
        ),
        migrations.AlterField(
            model_name="datadocument",
            name="url",
            field=models.CharField(
                blank=True,
                help_text="an optional URL to the document's remote source",
                max_length=375,
                null=True,
                validators=[django.core.validators.URLValidator()],
                verbose_name="URL",
            ),
        ),
    ]
