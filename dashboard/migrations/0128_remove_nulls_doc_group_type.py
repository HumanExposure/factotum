# Generated by Django 2.2.4 on 2019-10-03 13:06

import dashboard.models.data_document
from django.db import migrations, models
import django.db.models.deletion


def set_unidentified_type(apps, schema_editor):
    """
    Create "unidentified" document-type and populate NULLS w/ this type in docs.
    """
    DocumentType = apps.get_model("dashboard", "DocumentType")
    DataDocument = apps.get_model("dashboard", "DataDocument")
    GroupType = apps.get_model("dashboard", "GroupType")
    Compatibilty = apps.get_model("dashboard", "DocumentTypeGroupTypeCompatibilty")
    if not DocumentType.objects.filter(code="UN").exists():
        DocumentType.objects.create(title="Unidentified", code="UN")
    dt = DocumentType.objects.get(code="UN")
    for gt in GroupType.objects.all():
        if not Compatibilty.objects.filter(document_type=dt, group_type=gt).exists():
            Compatibilty.objects.create(document_type=dt, group_type=gt)
    other = DataDocument.objects.filter(document_type__code="OT")
    docs = DataDocument.objects.filter(document_type=None)
    docs = docs | other
    for doc in docs:
        doc.document_type = dt
    DataDocument.objects.bulk_update(docs, ["document_type"])


class Migration(migrations.Migration):

    dependencies = [("dashboard", "0127_extractedchemical_component")]

    operations = [
        migrations.RunPython(
            set_unidentified_type, reverse_code=migrations.RunPython.noop
        ),
        migrations.AlterField(
            model_name="datadocument",
            name="document_type",
            field=models.ForeignKey(
                default=dashboard.models.data_document.get_default_document_type,
                on_delete=models.SET(
                    dashboard.models.data_document.get_default_document_type
                ),
                to="dashboard.DocumentType",
            ),
        ),
        migrations.AlterField(
            model_name="datagroup",
            name="group_type",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to="dashboard.GroupType",
            ),
        ),
    ]
